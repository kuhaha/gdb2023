Python開発環境

1. 仮想環境
Pythonにおける仮想環境とは
Pythonを使用して開発を行う際には、用途に応じて専用の実行環境を作成し、環境を切り替えながら開発を行うことが一般的とされています。Pythonにおける仮想環境とは、この一時的に作成する実行環境のことを意味します。


1.1. venv
venvはPython 3.x.x 下に組み込まれた機能なので、Python自体のバージョン管理はできません.

1.2. virtualenv
virtualenvはPython自体のバージョンも管理することができます。
virtualenvで作成した仮想環境はPythonの別のバージョンに切り替えることができます。
```$ pip install virtualenv```

```$ mkdir プロジェクトディレクトリー```
```$ cd プロジェクトディレクトリー```
```$ python3 -m virtualenv -p 利用したいPythonのバージョン 環境名```
(例)
```$ python3 -m virtualenv -p 3.6 py36```

(仮想環境を起動)
```$ source 環境名/activate```

(例)
```$ source py36/activate```

(仮想環境を停止)
```$ deactivate```


2. Dockerコンテナによる開発環境の構築
OSなどと独立した実行環境の構築・コピー・配布

イメージ：インストール用のファイルセットなど
コンテナ：インストールされた利用可能な実行環境

2.1 Dockerエンジ

2.2 Dockerfile
FROM命令
RUN命令: イメージ作成時に実行するコマンド
CMD命令: コンテナ開始時に実行するコマンド
ADD命令
COPY命令

2.3 イメージ作成・削除

2.4 コンテナ開始・停止・削除


